apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: k8s.io/minikube-hostpath
volumeBindingMode: Immediate
reclaimPolicy: Delete
---
kind: Namespace
apiVersion: v1
metadata:
  name: robot-shop
  labels:
    name: robot-shop
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: robot-shop
spec:
  selector:
    matchLabels:
      name: mongodb # has to match .spec.template.metadata.labels
      tier: DB
      owner: Naveen
  serviceName: "mongodb"
  replicas: {{ .Values.deployment.replicaCount }} # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        name: mongodb # has to match .spec.template.metadata.labels
        tier: DB
        owner: Naveen
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongodb
        image: naveen2809/mongodb:{{ .Values.deployment.imageVersion }}
        imagePullPolicy: Always
        ports:
        - containerPort: 27017
          name: mongodb
        volumeMounts:
        - name: mongodb-volume
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: mongodb-volume
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "local-storage"
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: robot-shop
  labels:
    name: mongodb
    tier: DB
    owner: Naveen
spec:
  selector:
    name: mongodb
    tier: DB
    owner: Naveen
  ports:
  - port: {{ .Values.service.port }}
    name: mongodb
  clusterIP: None #headless service